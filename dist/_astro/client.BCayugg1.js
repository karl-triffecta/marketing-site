const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["_astro/signals.module.DCxwzsXV.js","_astro/preact.module.xc0zIhQ1.js","_astro/hooks.module.BtxRXMXR.js"])))=>i.map(i=>d[i]);
import{_ as w}from"./preload-helper.CLcXU_4U.js";import{_ as u,G as y,E as m}from"./preact.module.xc0zIhQ1.js";const v=({value:t,name:c,hydrate:a=!0})=>t?u(a?"astro-slot":"astro-static-slot",{name:c,dangerouslySetInnerHTML:{__html:t}}):null;v.shouldComponentUpdate=()=>!1;var d=v;const e=new Map;var V=t=>async(c,a,{default:r,...S},{client:h})=>{if(!t.hasAttribute("ssr"))return;for(const[n,f]of Object.entries(S))a[n]=u(d,{value:f,name:n});if(t.dataset.preactSignals){const{signal:n}=await w(async()=>{const{signal:s}=await import("./signals.module.DCxwzsXV.js");return{signal:s}},__vite__mapDeps([0,1,2]));let f=JSON.parse(t.dataset.preactSignals);for(const[s,l]of Object.entries(f))if(Array.isArray(l))l.forEach(([o,i])=>{const g=a[s][i];let _=g;if(typeof i!="string"&&(_=g[0],i=g[1]),!e.has(o)){const b=n(_);e.set(o,b)}a[s][i]=e.get(o)});else{if(!e.has(l)){const o=n(a[s]);e.set(l,o)}a[s]=e.get(l)}}(h!=="only"?y:m)(u(c,a,r!=null?u(d,{value:r}):r),t),t.addEventListener("astro:unmount",()=>m(null,t),{once:!0})};export{V as default};
