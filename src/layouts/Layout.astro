---
import "../styles/global.css";
import { SEO } from "astro-seo";
import { Schema } from "astro-seo-schema";
import Header from "../components/Header.tsx";
import Footer from "../components/Footer.tsx";
import CookieBanner from "../components/CookieBanner.tsx";
import DevConsole from "../components/DevConsole.astro";

// SEO
import ImgHeroTop from "../assets/hero-top.png";

// When using Prod switch
//const base = "/marketing-site/";
const base = "/";
const { showNewsletter = true } = Astro.props;

const { seo = {} } = Astro.props;

const domain = "https://triffecta.com";

const page = {
  canonicalUrl: `${domain}${seo.path || Astro.url.pathname}`,
  name: seo.name || "Triffecta",
  title: seo.title || "Revolutionizing Retail Media at Scale",
  titleTemplate: seo.titleTemplate || "%s | Triffecta",
  description:
    seo.description ||
    "Triffecta simplifies retail media with AI-powered campaign automation, standardized reporting, and single-campaign execution across top retailers",
  robots: seo.robots || "index, follow",
  altText: seo.altText || "Triffecta Revolutionizing Retail Media at Scale",
  keywords:
    seo.keywords ||
    "retail media platform, AI-powered advertising, campaign automation, media buying, multi-retailer campaigns, retail ad tech, ecommerce marketing, Triffecta",
  image: seo.image || ImgHeroTop.src,
  author: seo.author || "",
  publishedTime: seo.publishedTime
    ? `${seo.publishedTime}T09:00:00Z`
    : new Date().toISOString(),
  articleTags: seo.articleTags || [],
  type: seo.type || "website",
};
---

<!doctype html>
<html lang="en">
  <head>
    <!-- When not hosted on domain -->
    <base href={base} />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <meta name="generator" content={Astro.generator} />

    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#fad89a" />
    <meta name="application-name" content={page.name} />
    <meta name="apple-mobile-web-app-title" content={page.name} />

    <Schema
      item={{
        "@context": "https://schema.org",
        "@type": "Organization",
        name: page.name,
        url: domain,
        logo: `${domain}/icon.png`,
        sameAs: ["https://www.linkedin.com/company/triffecta-com/"],
        description: page.title,
      }}
    />
    <!-- TODO: Twitter -->
    <SEO
      title={page.title}
      titleTemplate={page.titleTemplate}
      description={page.description}
      canonical={page.canonicalUrl}
      nofollow={page.robots.includes("nofollow")}
      noindex={page.robots.includes("noindex")}
      openGraph={{
        basic: {
          title: page.title,
          type: page.type,
          image: page.image,
          url: page.canonicalUrl,
        },
        optional: {
          siteName: page.name,
          description: page.description,
          locale: "en_US",
        },
        image: {
          url: page.image,
          alt: page.altText,
          type: "image/png",
          width: 1200,
          height: 630,
        },
        ...(page.type === "article" && {
          article: {
            publishedTime: page.publishedTime,
            authors: page.author ? [page.author] : [],
            tags: page.articleTags,
          },
        }),
      }}
      extend={{
        link: [
          { rel: "icon", href: `${base}favicon.ico`, sizes: "any" },
          { rel: "icon", href: `${base}favicon.svg`, type: "image/svg+xml" },
          { rel: "apple-touch-icon", href: `${base}icon.png` },
          { rel: "manifest", href: `${base}site.webmanifest` },
        ],
        meta: [
          { name: "googlebot", content: page.robots },
          { name: "google", content: "notranslate" },
          { name: "author", content: page.name },
          {
            name: "keywords",
            content: page.keywords,
          },
          { property: "og:url", content: page.canonicalUrl },
          { property: "og:type", content: "website" },
          {
            property: "og:image:alt",
            content: page.altText,
          },
          { name: "twitter:image", content: page.image },
          {
            name: "twitter:title",
            content: page.title,
          },
          {
            name: "twitter:description",
            content: page.description,
          },
          ...(page.type === "article"
            ? [
                { name: "twitter:card", content: "summary_large_image" },
                { name: "twitter:image:alt", content: page.altText },
              ]
            : []),
        ],
      }}
    />

    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Nunito+Sans:ital,opsz,wght@0,6..12,200..1000;1,6..12,200..1000&display=swap"
      rel="stylesheet"
    />

    <script async src="https://www.googletagmanager.com/gtag/js?id=G-C1LG8PF9LR"
    ></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      // @ts-ignore
      window.gtag = function gtag() {
        window.dataLayer.push(arguments);
      };
      // @ts-ignore
      window.gtag("js", new Date());
      // @ts-ignore
      window.gtag("consent", "default", {
        analytics_storage: "denied",
        ad_storage: "denied",
        ad_user_data: "denied",
        ad_personalization: "denied",
        wait_for_update: 500,
      });
      // @ts-ignore
      window.gtag("config", "G-C1LG8PF9LR", {
        cookie_flags: "SameSite=None;Secure",
      });
    </script>

    <slot name="head" />
  </head>
  <body class="bg-background">
    <Header client:load />
    <main>
      <slot />
    </main>
    <Footer client:load showNewsletter={showNewsletter} />
    <DevConsole />
    <CookieBanner baseUrl={base} client:load />
  </body>
</html>
